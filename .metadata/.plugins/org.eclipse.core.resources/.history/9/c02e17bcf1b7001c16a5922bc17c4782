package com.animals.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.crossstore.ChangeSetPersister.NotFoundException;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.animals.DAO.PublicacionDAO;
import com.animals.models.PublicacionModel;

@RestController
public class PublicacionController {
	@Autowired
	PublicacionDAO postDao;

	@GetMapping("/listarUsuarios")
	@ResponseBody
	public List<PublicacionModel> listarUsuarios() {
		return postDao.getAll();
	}

	@GetMapping("/listarUsuarios/{nombreUsuario}")
	@ResponseBody
	public PublicacionModel listarUsuario(@PathVariable int id) throws NotFoundException {
		if (id ) {
			throw new NotFoundException();
		}
		return postDao.getById(id);
	}

	@DeleteMapping("/borrarUsuario/{nombreUsuario}")
	@ResponseBody
	public void borrarUsuario(@PathVariable int id) throws NotFoundException {
		if (id == "") {
			throw new NotFoundException();
		}
		postDao.delete(postDao.getById(id));
	}

	@PutMapping("/editarUsuario/{nombreUsuario}")
	@ResponseBody
	public void editarUsuario(@PathVariable int id, @RequestBody PublicacionModel user)  {
		
		postDao.update(postDao.getById(id).copyData(user));
	}
	
	@PostMapping("/crearUsuario")
	@ResponseBody
	public void crearUsuario(@RequestBody PublicacionModel user) {
		postDao.create(user);
	}

}
